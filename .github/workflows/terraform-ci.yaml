name: Terraform CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches: [main]

env:
  BUCKET_NAME: "terraformars-state"
  AWS_REGION: "eu-west-3"
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  changed-files:
    name: Generate matrix for building images
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Tools
        run: |
          sudo apt-get -y install jo

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37.1.2
        with:
          dir_names: true
          dir_names_max_depth: 2
          json: true
          files: |
            terraform/**

      - name: List all changed files
        run: |
          echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - name: Store changed directories
        id: set-matrix
        run: |
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == "[]" ]]; then
            echo "matrix={\"dir\":$(find terraform/ -type d -mindepth 1 -maxdepth 1 | jo -a)}" >> "${GITHUB_OUTPUT}"
          else
            echo "matrix={\"dir\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "${GITHUB_OUTPUT}"
          fi

  tf-plan:
    name: Validate and plan
    runs-on: ubuntu-22.04
    needs:
      - changed-files
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Display working directory
        run: echo  ${{ matrix.dir }}

      - name: Git clone the repository
        uses: actions/checkout@v3

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::132873860067:role/github-actions-read-role
          role-session-name: GithubActionsSession
          aws-region: ${{ env.AWS_REGION }}

      - name: Sops Binary Installer
        id: sops
        uses: mdgreenwald/mozilla-sops-action@v1.4.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3
          terraform_wrapper: true

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive -diff
        working-directory: ${{ matrix.dir }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ matrix.dir }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color > plan.log
        working-directory: ${{ matrix.dir }}

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: |
          terraform plan -input=false -no-color
        working-directory: ${{ matrix.dir }}

  app-token:
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/app-token.yaml
    secrets: inherit

  update-pr:
    runs-on: ubuntu-22.04
    if: github.event_name == 'pull_request'
    needs:
      - tf-plan
      - app-token
    steps:
      - name: Update Pull Request
        id: comment
        uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: "${{ needs.app-token.outputs.token }}"
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
