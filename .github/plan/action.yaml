name: "Terraform setup and plan"
description: "Setup Terraform and creates plan"
inputs:
  terraform_directory:
    description: "Directory that holds Terraform code"
    required: true
  terraform_version:
    description: "Terraform Version"
    required: false
    default: 1.5.3
  pr_id:
    description: "Pull request ID"
    required: true
  github_token:
    description: "GitHub token for auth"
    required: true

runs:
  using: composite
  steps:
    - name: Terraform Init
      id: init
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: terraform init

    - name: Terraform Validate
      id: validate
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      run: terraform validate

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform_directory }}
      shell: bash
      continue-on-error: true
      run: |
        echo 'plan<<EOF' >> $GITHUB_OUTPUT
        terraform plan -no-color -out=tf-plan >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT


    - name: Comment Plan
      if: github.event_name == 'pull_request'
      id: comment-plan
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ inputs.github_token }}
        issue-number: ${{ inputs.pr_id }}
        body: |
          Terraform Plan for ${{ inputs.terraform_directory }}:

          ```
          ${{ steps.plan.outputs.plan }}
          ```

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      shell: bash
      run: exit 1
